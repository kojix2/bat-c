name: test
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: ["ubuntu", "macos", "windows"]
      fail-fast: false
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          submodules: true
      - run: git submodule update --init
      - run: cargo test --verbose
      - run: cargo build --verbose

      - name: Make cl.exe available on Windows
        if: matrix.os == 'windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Run test script on Linux and macOS
        if: matrix.os != 'windows'
        run: cd test && ./test.sh
      
      - name: Run test script on Windows
        if: matrix.os == 'windows'
        run: cd test && ./test.bat

      - run: cargo build --release --verbose

      - name: Create Zip Archive for Linux
        if: matrix.os == 'ubuntu'
        run: |
          cd target/release
          zip -r bat_c_ubuntu.zip libbat_c.a libbat_c.so ../../bat.h ../../README.md

      - name: Create Zip Archive for macOS
        if: matrix.os == 'macos'
        run: |
          cd target/release
          zip -r bat_c_macos.zip libbat_c.a libbat_c.dylib ../../bat.h ../../README.md

      - name: Create Zip Archive for Windows
        if: matrix.os == 'windows'
        run: |
          $output = "target/release/bat_c_windows.zip"
          $paths = @(
            "target/release/bat_c.lib",
            "target/release/bat_c.dll",
            "target/release/bat_c.dll.lib",
            "bat.h",
            "README.md"
          )
          Compress-Archive -Path $paths -DestinationPath $output

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-test
          path: |
            target/release/bat_c_${{ matrix.os }}.zip
