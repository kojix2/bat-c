name: release

on:
  push:
    tags:
      - "v*"

jobs:
  build_release_x64:
    name: Build Release x64
    strategy:
      matrix:
        os: [ubuntu, macos, windows]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Build
        run: |
          rustup update
          cargo build --release --verbose

      - name: Create Zip Archive for Linux
        if: matrix.os == 'ubuntu'
        run: |
          cd target/release
          zip -r bat_c_ubuntu.zip libbat_c.a libbat_c.so ../../bat.h ../../README.md

      - name: Create Zip Archive for macOS
        if: matrix.os == 'macos'
        run: |
          cd target/release
          zip -r bat_c_macos.zip libbat_c.a libbat_c.dylib ../../bat.h ../../README.md

      - name: Create Zip Archive for Windows
        if: matrix.os == 'windows'
        run: |
          $output = "target/release/bat_c_windows.zip"
          $paths = @(
            "target/release/bat_c.lib",
            "target/release/bat_c.dll",
            "target/release/bat_c.dll.lib",
            "bat.h",
            "README.md"
          )
          Compress-Archive -Path $paths -DestinationPath $output

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: |
            target/release/bat_c_ubuntu.zip
            target/release/bat_c_macos.zip
            target/release/bat_c_windows.zip
